@menu
* Functions and Variables for augmented_lagrangian::
@end menu

@node Functions and Variables for augmented_lagrangian,  , augmented_lagrangian-pkg, augmented_lagrangian-pkg
@section Functions and Variables for augmented_lagrangian

@deffn  {関数} augmented_lagrangian_method @
@fname{augmented_lagrangian_method} (@var{FOM}, @var{xx}, @var{C}, @var{yy}) @
@fname{augmented_lagrangian_method} (@var{FOM}, @var{xx}, @var{C}, @var{yy}, optional_args) @
@fname{augmented_lagrangian_method} ([@var{FOM}, @var{grad}], @var{xx}, @var{C}, @var{yy}) @

制約 @var{C}をゼロに保ちながら、式 @var{FOM}の変数 @var{xx}に関する近似最小を返します。
@var{yy}は @var{xx}の初期推量のリストです。
利用した方法は拡張 Lagrange法です。(文献[1]と[2]を参照してください。)

もし@var{grad}が存在するなら、 それは @var{FOM}の @var{xx}に関するグラディエントであり、
@var{xx}の変数それぞれに関する式のリストとして表されます。
もし存在ないなら、グラディエントは自動的に構成されます。

@var{FOM}と、もし @var{grad}が存在するならその要素それぞれは、
関数名やラムダ式ではなく、通常の式でなければいけません。

@code{optional_args}は
@code{@var{symbol} = @var{value}}として指定される追加の引数を表します。
認識するオプション引数は以下の通りです:

@table @code
@item niter
拡張 Lagrangeアルゴリズムの繰り返しの回数
@item lbfgs_tolerance
LBFGSに供給される許容誤差
@item iprint
LBFGSに供給される
IPRINTパラメータ(メッセージ出力を制御する２つの整数のリスト)
@item %lambda
拡張 Lagrangeを計算するために使われる
@code{%lambda}の初期値
@end table

この実装は
擬似 Newtonアルゴリズムであるメモリ制限付きBFGS (LBFGS)アルゴリズムを適用することで
拡張 Lagrangeを最小化します。

@code{load("augmented_lagrangian")}はこの関数をロードします。

@ref{lbfgs-pkg}も参照してください。

参考文献:

@c Both links seem invalid now (one redirects somewhere, one is access forbidden). Remove them?
[1] @url{http://www-fp.mcs.anl.gov/otc/Guide/OptWeb/continuous/constrained/nonlinearcon/auglag.html}

[2] @url{http://www.cs.ubc.ca/spider/ascher/542/chap10.pdf}

例:

@c ===beg===
@c load ("lbfgs");
@c load ("augmented_lagrangian");
@c FOM: x^2 + 2*y^2;
@c xx: [x, y];
@c C: [x + y - 1];
@c yy: [1, 1];
@c augmented_lagrangian_method(FOM, xx, C, yy, iprint=[-1,0]);
@c ===end===
@example
@group
(%i1) load ("lbfgs");
(%o1)  /home/gunter/src/maxima-code/share/lbfgs/lbfgs.mac
@end group
@group
(%i2) load ("augmented_lagrangian");
(%o2) /home/gunter/src/maxima-code/share/contrib/augmented_lagra\
ngian.mac
@end group
@group
(%i3) FOM: x^2 + 2*y^2;
                               2    2
(%o3)                       2 y  + x
@end group
@group
(%i4) xx: [x, y];
(%o4)                        [x, y]
@end group
@group
(%i5) C: [x + y - 1];
(%o5)                      [y + x - 1]
@end group
@group
(%i6) yy: [1, 1];
(%o6)                        [1, 1]
@end group
@group
(%i7) augmented_lagrangian_method(FOM, xx, C, yy, iprint=[-1,0]);
(%o7) [[x = 0.666659841080023, y = 0.333340272455448],
                                 %lambda = [- 1.333337940892518]]
@end group
@end example

前と同じ例ですが、今回はグラディエントが引数として供給されます。

@c ===beg===
@c load ("lbfgs")$
@c load ("augmented_lagrangian")$
@c FOM: x^2 + 2*y^2;
@c xx: [x, y];
@c grad : [2*x, 4*y];
@c C: [x + y - 1];
@c yy: [1, 1];
@c augmented_lagrangian_method ([FOM, grad], xx, C, yy,
@c                              iprint = [-1, 0]);
@c ===end===
@example
(%i1) load ("lbfgs")$
(%i2) load ("augmented_lagrangian")$
@group
(%i3) FOM: x^2 + 2*y^2;
                               2    2
(%o3)                       2 y  + x
@end group
@group
(%i4) xx: [x, y];
(%o4)                        [x, y]
@end group
@group
(%i5) grad : [2*x, 4*y];
(%o5)                      [2 x, 4 y]
@end group
@group
(%i6) C: [x + y - 1];
(%o6)                      [y + x - 1]
@end group
@group
(%i7) yy: [1, 1];
(%o7)                        [1, 1]
@end group
@group
(%i8) augmented_lagrangian_method ([FOM, grad], xx, C, yy,
                             iprint = [-1, 0]);
(%o8) [[x = 0.6666598410800247, y = 0.3333402724554464],
                                 %lambda = [- 1.333337940892525]]
@end group
@end example

@opencatbox
@category{Numerical methods} @category{Optimization} @category{Share packages} @category{Package augmented_lagrangian}
@closecatbox

@end deffn
